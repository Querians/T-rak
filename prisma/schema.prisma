// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

model User {
  userId    String     @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  email     String     @unique @db.VarChar(254)
  name      String     @db.VarChar(50)
  token     String     @db.Text
  image     String?    @db.Text
  aboutMe   String?    @db.Text
  tierlists Tierlist[]
}

model Tierlist {
  tierlistId    String   @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  category      Category @relation(fields: [categoryId], references: [categoryId])
  categoryId    String   @db.Uuid
  user          User     @relation(fields: [userId], references: [userId])
  userId        String   @db.Uuid
  name          String   @db.VarChar(50)
  description   String?  @db.Text
  coverPhotoUrl String?  @db.Text
  rows          Row[]
}

model Category {
  categoryId   String     @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  categoryName String     @db.VarChar(50)
  tierlists    Tierlist[]
}

model Row {
  rowId      String    @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  tierlist   Tierlist  @relation(fields: [tierlistId], references: [tierlistId])
  tierlistId String    @db.Uuid
  label      String?   @db.VarChar(50)
  color      String?   @db.VarChar(6)
  order      Int       @db.SmallInt
  elements   Element[]
}

model Element {
  elementId  String @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  row        Row    @relation(fields: [rowId], references: [rowId])
  rowId      String @db.Uuid
  pictureUrl String @db.Text
  order      Int    @db.SmallInt
}
